name: Sign and Upload APK

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      # Configurar Node.js
      - name: Configuraci贸n de Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'

      - name: Prepare Android SDK Build Tools
        run: |
            sudo apt-get update
            sudo apt-get install -y wget unzip
            wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O commandlinetools.zip
            mkdir -p $HOME/android-sdk/
            unzip commandlinetools.zip -d $HOME/android-sdk/
            echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
            echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV
            source $GITHUB_ENV
      
      - name: Check Android SDK directory
        run: ls -ltha $HOME/android-sdk/ & ls -ltha $HOME/android-sdk/cmdline-tools & ls -ltha $HOME/android-sdk/cmdline-tools/bin

      - name: Install Android SDK Build Tools
        run: |
            yes | $ANDROID_HOME/cmdline-tools/bin/sdkmanager --licenses --sdk-root=$ANDROID_HOME
            $ANDROID_HOME/cmdline-tools/bin/sdkmanager "platform-tools" "build-tools;34.0.0"

      - name: Folders structures
        run: ls -ltha /home/runner/ & ls -ltha /home/runner/android-sdk/ & ls -ltha /home/runner/android-sdk/build-tools/ && ls -ltha /usr/local/lib/android/ & ls -ltha /usr/local/lib/android/sdk/ & ls -ltha /usr/local/lib/android/sdk/build-tools/

      - name: Set ANDROID_HOME environment variable
        run: echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV

      # Instalar dependencias con npm
      - name: Instalaci贸n de dependencias
        run: npm install

      # Actualizar la versi贸n
      - name: Increment version
        run: |
          VERSION_FILE=version.properties
          if [ -f "$VERSION_FILE" ]; then
            . $VERSION_FILE
            PATCH_VERSION=$((PATCH_VERSION+1))
          else
            MAJOR_VERSION=1
            MINOR_VERSION=0
            PATCH_VERSION=0
          fi
          echo "MAJOR_VERSION=$MAJOR_VERSION" > $VERSION_FILE
          echo "MINOR_VERSION=$MINOR_VERSION" >> $VERSION_FILE
          echo "PATCH_VERSION=$PATCH_VERSION" >> $VERSION_FILE
          echo "VERSION=$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION" >> $VERSION_FILE
          echo "Updated version to $MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION"

      - name: Build release APK
        run: npm run pipeline:build-release
      
      # Usar la versi贸n en el build.gradle
      - name: Set version in Gradle
        run: |
          VERSION=$(grep VERSION version.properties | cut -d'=' -f2)
          sed -i "s/versionName \".*\"/versionName \"$VERSION\"/" android/app/build.gradle
      
      #- name: Sign APK
      #  uses: r0adkll/sign-android-release@v1
      #  id: sign_app
      #  with:
      #    releaseDirectory: android/app/build/outputs/apk/release
      #    signingKeyBase64: ${{ secrets.SIGNING_KEY_BASE64 }}
      #    alias: ${{ secrets.SIGNING_KEY_ALIAS }}
      #    keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
      #    keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}
      #  env:
      #    BUILD_TOOLS_VERSION: "34.0.0"
      
      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: Signed app bundle
          #path: ${{steps.sign_app.outputs.signedReleaseFile}}
          path: android/app/build/outputs/apk/release
  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3 Bucket
        run: |
          aws s3 cp app/build/outputs/apk/release/app-release.apk s3://${{ secrets.S3_BUCKET_NAME }}/app-release.apk